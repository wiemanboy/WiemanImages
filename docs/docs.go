// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/files/": {
            "post": {
                "description": "Creates a file in the storage",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Create file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Key for the file",
                        "name": "key",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "File successfully uploaded",
                        "schema": {
                            "$ref": "#/definitions/files.FileCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Failed to save image file please try again",
                        "schema": {
                            "$ref": "#/definitions/files.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/files/{key}": {
            "get": {
                "description": "Fetches a file from the storage if it is an image it will be scaled to the requested size",
                "tags": [
                    "Files"
                ],
                "summary": "Fetch file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of files",
                        "schema": {
                            "$ref": "#/definitions/files.FileListResponse"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "$ref": "#/definitions/files.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/files/auth/callback": {
            "get": {
                "description": "Callback for Auth0 browser authentication",
                "tags": [
                    "Auth"
                ],
                "summary": "Callback",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Failed to exchange an authorization code for a token",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to verify ID Token",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/files/auth/login": {
            "get": {
                "description": "Redirects to Auth0 login page for browser authentication",
                "tags": [
                    "Auth"
                ],
                "summary": "Redirects to Auth0 login page",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Failed to save session",
                        "schema": {
                            "$ref": "#/definitions/auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/services/files/ping": {
            "get": {
                "description": "Health check endpoint",
                "tags": [
                    "Services"
                ],
                "summary": "Ping",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "$ref": "#/definitions/presentation.PingResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "files.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "files.FileCreateResponse": {
            "type": "object",
            "properties": {
                "fileKey": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "files.FileListResponse": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "presentation.PingResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Wieman Images API",
	Description:      "This is the Wieman Images service API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
